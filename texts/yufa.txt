TODO: 58 73
R0	E->subs
R12	subs->\e
R13	subs->sub id ( subv ) { stmts } subs
R14	subv->\e
R15	subv->type id subva
R16	subva->\e
R17	subva->, type id subva
R1	stmts->stmt stmts
R2	stmts->id : stmt stmts
R3	stmts->\e
R4	stmt->expr ;
R5	stmt->type vdecl ;
R7	stmt->if ( expr ) stmt
R18	stmt->if ( expr ) stmt else stmt
R8	stmt->while ( expr ) stmt
R9	stmt->for ( exprf ) stmt
R10	stmt->goto id ;
R11	stmt->{ stmts }
R19	stmt->break ;
R20	stmt->continue ;
R32	vdecl->id
R33	vdecl->id = inif
R34	vdecl->id , vdecl
R35	vdecl->id = inif , vdecl
R36	insv->exprf
R37	insv->exprf , insv
R38	insv->\e
R24	inif->ini
R25	inif->ini : ini : ini : ini
R26	ini->expr
R27	ini->{ expr inia }
R28	inia->, expr inia
R29	inia->\e
R30	exprf->expr
R31	exprf->expr : expr : expr : expr
R39	expr->id
R40	expr->num
R41	expr->expr || expr
R42	expr->expr && expr
R43	expr->expr or expr
R44	expr->expr and expr
R45	expr->expr | expr
R46	expr->expr ^ expr
R47	expr->expr & expr
R48	expr->expr == expr
R49	expr->expr != expr
R50	expr->expr > expr
R51	expr->expr >= expr
R52	expr->expr < expr
R53	expr->expr <= expr
R54	expr->expr + expr
R55	expr->expr - expr
R56	expr->expr * expr
R57	expr->expr / expr
R58	expr->expr \% expr
R59	expr->(-) expr
R60	expr->! expr
R61	expr->expr . expr
R62	expr->( expr )
R63	expr->id ( insv )
R64	expr->(*) expr
R65	expr->(&) expr
R66	expr->expr [ expr ]
R67	expr->expr as_op exprf

FOLLOW
E	$
subs	$
subv	)
subva	)
stmts	$ }
stmt	$ id num type if else while for goto break continue { } op1 (
inif	; ,
ini	; , :
inia	}
exprf	) , ;
expr	) : , ; } op2 [ ] = as_op
vdecl	;
insv	)


FIRST
E	
subs	
subv	
stmts	\e id type if while for goto {
stmt	id type if while for goto {
inif	expr {
ini	expr {
inia	\e ,
exprf	expr
vdecl	id
insv	\e expr

52 72 98-100 124-129


I255:
E->subs\.
I0:
E->\.subs
subs->\.
subs->\.sub id ( subv ) { stmts } subs
I0---sub id (--->I61(I34 I35)
  ---subs------->I255
I9:
subs->sub id ( subv ) {\.stmts } subs
stmts->\.stmt stmts
stmts->\.id : stmt stmts
stmts->\.
stmt->\.expr ;
stmt->\.type vdecl ;
stmt->\.if ( expr ) stmt
stmt->\.if ( expr ) stmt else stmt
stmt->\.while ( expr ) stmt
stmt->\.for ( exprf ) stmt
stmt->\.goto id ;
stmt->\.break ;
stmt->\.continue ;
stmt->\.{ stmts }
expr->\.id
expr->\.num
expr->\.expr || expr
expr->\.expr && expr
expr->\.expr or expr
expr->\.expr and expr
expr->\.expr | expr
expr->\.expr ^ expr
expr->\.expr & expr
expr->\.expr == expr
expr->\.expr != expr
expr->\.expr > expr
expr->\.expr >= expr
expr->\.expr < expr
expr->\.expr <= expr
expr->\.expr + expr
expr->\.expr - expr
expr->\.expr * expr
expr->\.expr / expr
expr->\.expr \% expr
expr->\.(-) expr
expr->\.! expr
expr->\.expr . expr
expr->\.( expr )
expr->\.id ( insv )
expr->\.(*) expr
expr->\.(&) expr
expr->\.expr [ expr ]
expr->\.expr as_op exprf
I9---id----------->I1
  ---num---------->I44
  ---type--------->I2
  ---if(---------->I3
  ---while(------->I4
  ---for(--------->I5
  ---goto id ;---->I6
  ---break ;------>I96
  ---continue ;--->I97
  ---{------------>I77
  ---(-)---------->I82
  ---!------------>I83
  ---(------------>I84
  ---(*)---------->I85
  ---(&)---------->I86
  ---stmt--------->I7
  ---stmts-------->I49
  ---expr--------->I87
I1:
stmts->id\.: stmt stmts
expr->id\.
expr->id\.( insv )
I1---:------------>I8
  ---(------------>I10
I2:
stmt->type\.vdecl ;
vdecl->\.id
vdecl->\.id = inif
vdecl->\.id , vdecl
vdecl->\.id = inif , vdecl
I2---id----------->I11
  ---vdecl-------->I12
I3:
stmt->if (\.expr ) stmt
stmt->if (\.expr ) stmt else stmt
\.expr
I3---same---I82
  ---expr--------->I13
I4:
stmt->while (\.expr ) stmt
\.expr
I4---same---I82
  ---expr--------->I14
I5:
stmt->for(\.exprf ) stmt
exprf->\.expr
exprf->\.expr : expr : expr : expr
\.expr
I5---same---I82
  ---expr--------->I15
  ---exprf-------->I16
I6:
stmt->goto id ;\.
I7:
stmts->stmt\.stmts
\.stmts
\.stmt
\.expr
I7---same---I0
  ---stmt--------->I7
  ---stmts-------->I17
  ---expr--------->I87
I77:
stmt->{\.stmts }
\.stmts
\.stmt
\.expr
I77---same---I0
   ---stmt-------->I7
   ---stmts------->I78
   ---expr-------->I87
I8:
stmts->id :\.stmt stmts
\.stmt
\.expr
I8---id----------->I94
  ---same---I0
  ---stmt--------->I79
  ---expr--------->I87
I79:
stmts->id : stmt\.stmts
\.stmts
\.stmt
\.expr
I79---same---I0
   ---{------------>I77
   ---stmts-------->I18
I10:
expr->id (\.insv )
insv->\.exprf
insv->\.exprf , insv
insv->\.
exprf->\.expr
exprf->\.expr : expr : expr : expr
\.expr
I10---same---I3
   ---expr---------->I15
   ---exprf--------->I42
   ---insv---------->I46
I11:
vdecl->id\.
vdecl->id\. = inif
vdecl->id\. , vdecl
vdecl->id\. = inif , vdecl
I11---,------------->I59
   ---=------------->I53
I59:
vdecl->id ,\.vdecl
vdecl->\.id
vdecl->\.id = inif
vdecl->\.id , vdecl
vdecl->\.id = inif , vdecl
I59---id------------>I11
   ---vdecl--------->I48
I48:
vdecl->id , vdecl\.
I12:
stmt->type vdecl\.;
I12---;------------->I57
I13:
stmt->if ( expr\.) stmt
stmt->if ( expr\.) stmt else stmt
expr\.
I13---op---I87
   ---)------------->I58
I14:
stmt->while ( expr\.) stmt
expr\.
I14---op---I87
   ---)------------->I73
I15:
exprf->expr\.
exprf->expr\.: expr : expr : expr
expr\.
I15---op---I87
   ---:------------->I36
I16:
stmt->for( exprf\.) stmt
I16---)------------->I75
I17:
stmts->stmt stmts\.
I18:
stmts->id : stmt stmts\.
I19:
ini->expr\.
expr\.
I19---op---I87
I20:
ini->{\.expr inia }
\.expr
I20---same---I82
   ---expr---------->I22
I21:
inif->ini\.
inif->ini\.: ini : ini : ini
I21---:------------->I28
I22:
ini->{ expr\.inia }
inia->\., expr inia
inia->\.
expr\.
I22---op---I87
   ---,-------------->I23
   ---inia----------->I26
I23:
inia->,\.expr inia
\.expr
I23---same---I3
   ---expr----------->I24
I24:
inia->, expr\.inia
inia->\., expr inia
inia->\.
expr\.
I24---op---I87
   ---,-------------->I23
   ---inia----------->I25
I25:
inia->, expr inia\.
I26:
ini->{ expr inia\.}
I26---}-------------->I27
I27:
ini->{ expr inia }\.
I28:
inif->ini :\.ini : ini : ini
ini->\.expr
ini->\.{ expr inia }
\.expr
I28---same---I3
   ---{-------------->I20
   ---expr----------->I19
   ---ini------------>I29
I29:
inif->ini : ini\.: ini : ini
I29---:-------------->I30
I30:
inif->ini : ini :\.ini : ini
ini->\.expr
ini->\.{ expr inia }
\.expr
I30---same---I3
   ---expr----------->I19
   ---{-------------->I20
   ---ini------------>I31
I31:
inif->ini : ini : ini\.: ini
I31---:-------------->I32
I32:
inif->ini : ini : ini :\.ini
ini->\.expr
ini->\.{ expr inia }
\.expr
I32---same---I3
   ---expr----------->I19
   ---{-------------->I20
   ---ini------------>I33
I33:
inif->ini : ini : ini : ini\.
I36:
exprf->expr :\.expr : expr : expr
\.expr
I36---same---I3
   ---expr----------->I37
I37:
exprf->expr : expr\.: expr : expr
expr\.
I37---op---I87
   ---:-------------->I38
I38:
exprf->expr : expr :\.expr : expr
\.expr
I38---expr----------->I39
I39:
exprf->expr : expr : expr\.: expr
expr\.
I39---op---I87
   ---:-------------->I40
I40:
exprf->expr : expr : expr :\.expr
\.expr
I40---expr----------->I41
I41:
exprf->expr : expr : expr : expr\.
expr\.
I41---op---I87
I42:
insv->exprf\.
insv->exprf\., insv
I42---,-------------->I43
I43:
insv->exprf ,\.insv
insv->\.exprf insva
insv->\.exprf , insv
insv->\.
exprf->\.expr
exprf->\.expr : expr : expr : expr
\.expr
I43---same---I3/I10
   ---expr----------->I15
   ---exprf---------->I42
   ---insv----------->I45
I44:
expr->num\.
I45:
insv->exprf , insv\.
I46:
expr->id ( insv\.)
I46---)------------>I47
I47:
expr->id ( insv )\.
I49:
subs->sub id ( subv ) { stmts\.} subs
I49---}------------>I50
I50:
subs->sub id ( subv ) { stmts }\.subs
subs->\.
subs->\.sub id ( subv ) { stmts } subs
I50---sub id (-->I61(I34 I35)
   ---subs------>I51
I51:
subs->sub id ( subv ) { stmts } subs\.
I53:
vdecl->id =\.inif
vdecl->id =\.inif , vdecl
inif->\.ini
inif->\.ini : ini : ini : ini
ini->\.expr
ini->\.{ expr inia }
\.expr
I53---same---I3/I28
   ---{----------->I20
   ---expr-------->I19
   ---ini--------->I21
   ---inif-------->I80
I80:
vdecl->id = inif\.
vdecl->id = inif\., vdecl
I80---,----------->I54
I54:
vdecl->id = inif ,\.vdecl
vdecl->\.id
vdecl->\.id = inif
vdecl->\.id , vdecl
vdecl->\.id = inif , vdecl
I54---id-------->I11
   ---vdecl----->I55
I55:
vdecl->id = inif , vdecl\.
I57:
stmt->type vdecl ;\.
I58:
stmt->if ( expr )\.stmt
stmt->if ( expr )\.stmt else stmt
\.stmt
\.expr
I58---same---I8
   ---stmt--------->I60
   ---expr--------->I87
I60:
stmt->if ( expr ) stmt\.
stmt->if ( expr ) stmt\.else stmt
I60---else------->I70
I61:
subs->sub id (\.subv ) { stmts } subs
subv->\.
subv->\.type id subva
I61---type------->I62
   ---subv------->I69
I62:
subv->type\.id subva
I62---id--------->I63
I63:
subv->type id\.subva
subva->\.
subva->, type id subva
I63---,---------->I64
   ---subva------>I67
I64:
subva->,\.type id subva
I64---type------->I65
I65:
subva->, type\.id subva
I65---id--------->I66
I66:
subva->, type id\.subva
subva->\.
subva->, type id subva
I66---,---------->I64
   ---subva------>I68
I67:
subv->type id subva\.
I68:
subva->, type id subva\.
I69:
subs->sub id ( subv\.) { stmts } subs
I69---) {-------->I9(I56)
I70:
stmt->if ( expr ) stmt else\.stmt
\.stmt
\.expr
I70---same---I8
   ---expr--------->I87
   ---stmt--------->I71
I71:
stmt->if ( expr ) stmt else stmt\.
I73:
stmt->while ( expr )\.stmt
\.stmt
\.expr
I73---same---I8
   ---expr--------->I87
   ---stmt--------->I74
I74:
stmt->while ( expr ) stmt\.
I75:
stmt->for ( exprf )\.stmt
\.stmt
\.expr
I75---same---I8
   ---expr--------->I87
   ---stmt--------->I76
I76:
stmt->for ( exprf ) stmt\.
I78:
stmt->{ stmts\.}
I78---}------------>I81
I81:
stmt->{ stmts }\.
I82:
expr->(-)\.expr
\.expr
I82---id----------->I94
   ---num---------->I44
   ---(-)---------->I82
   ---!------------>I83
   ---(------------>I84
   ---(*)---------->I85
   ---(&)---------->I87
   ---expr--------->I88
I83:
expr->!\.expr
\.expr
I83---same---I82
   ---expr--------->I89
I84:
expr->(\.expr )
\.expr
I84---same---I82
   ---expr--------->I92
I85:
expr->(*)\.expr
\.expr
I85---same---I82
   ---expr--------->I90
I86:
expr->(&)\.expr
\.expr
I86---same---I82
   ---expr--------->I91
I87:
stmt->expr\.;
expr->expr\.|| expr
expr->expr\.&& expr
expr->expr\.or expr
expr->expr\.and expr
expr->expr\.| expr
expr->expr\.^ expr
expr->expr\.& expr
expr->expr\.== expr
expr->expr\.!= expr
expr->expr\.> expr
expr->expr\.>= expr
expr->expr\.< expr
expr->expr\.<= expr
expr->expr\.+ expr
expr->expr\.- expr
expr->expr\.* expr
expr->expr\./ expr
expr->expr\.\% expr
expr->expr\.. expr
expr->expr\.[ expr ]
expr->expr\.as_op exprf
I87---||----------->I101
   ---&&----------->I102
   ---or----------->I103
   ---and---------->I104
   ---|------------>I105
   ---^------------>I106
   ---&------------>I107
   ---==----------->I108
   ---!=----------->I109
   ---\>------------>I110
   ---\>=----------->I111
   ---<------------>I112
   ---<=----------->I113
   ---+------------>I114
   ---\------------->I115
   ---*------------>I116
   ---/------------>I117
   ---\%------------>I118
   ---.------------>I119
   ---[------------>I120
   ---as_op-------->I121
   %---;------------>%I95
I88:
expr->(-) expr\.
expr\.
I88---op---I87
I89:
expr->! expr\.
expr\.
I89---op---I87
I90:
expr->(*) expr\.
expr\.
I90---op---I87
I91:
expr->(&) expr\.
expr\.
I91---op---I87
I92:
expr->( expr\.)
expr\.
I92---op---I87
   ---)------------>I93
I93:
expr->( expr )\.
I94:
expr->id\.
expr->id\.( insv )
I94---(------------>I10
I95:
stmt->expr ;\.
I96:
stmt->break ;\.
I97:
stmt->continue ;\.
I101:
expr->expr ||\.expr
\.expr
I101---same---I82
    ---expr-------->I131
I102:
expr->expr &&\.expr
\.expr
I102---same---I82
    ---expr-------->I132
I103:
expr->expr or\.expr
\.expr
I103---same---I82
    ---expr-------->I133
I104:
expr->expr and\.expr
\.expr
I104---same---I82
    ---expr-------->I134
I105:
expr->expr |\.expr
\.expr
I105---same---I82
    ---expr-------->I135
I106:
expr->expr ^\.expr
\.expr
I106---same---I82
    ---expr-------->I136
I107:
expr->expr &\.expr
\.expr
I107---same---I82
    ---expr-------->I137
I108:
expr->expr ==\.expr
\.expr
I108---same---I82
    ---expr-------->I138
I109:
expr->expr !=\.expr
\.expr
I109---same---I82
    ---expr-------->I139
I110:
expr->expr >\.expr
\.expr
I110---same---I82
    ---expr-------->I140
I111:
expr->expr >=\.expr
\.expr
I111---same---I82
    ---expr-------->I141
I112:
expr->expr <\.expr
\.expr
I112---same---I82
    ---expr-------->I142
I113:
expr->expr <=\.expr
\.expr
I113---same---I82
    ---expr-------->I143
I114:
expr->expr +\.expr
\.expr
I114---same---I82
    ---expr-------->I144
I115:
expr->expr -\.expr
\.expr
I115---same---I82
    ---expr-------->I145
I116:
expr->expr *\.expr
\.expr
I116---same---I82
    ---expr-------->I146
I117:
expr->expr /\.expr
\.expr
I117---same---I82
    ---expr-------->I147
I118:
expr->expr \%\.expr
\.expr
I118---same---I82
    ---expr-------->I148
I119:
expr->expr .\.expr
\.expr
I119---same---I82
    ---expr-------->I149
I120:
expr->expr [\.expr ]
\.expr
I120---same---I82
    ---expr-------->I150
I121:
expr->expr as_op\.exprf
\.exprf
\.expr
I121---same---I82
    ---expr-------->I15
    ---exprf------->I122
I122:
expr->expr as_op exprf\.
I123:
expr->expr [ expr ]\.
I131:
expr->expr || expr\.
expr\.
I131---op---I87
I132:
expr->expr && expr\.
expr\.
I132---op---I87
I133:
expr->expr or expr\.
expr\.
I133---op---I87
I134:
expr->expr and expr\.
expr\.
I134---op---I87
I135:
expr->expr | expr\.
expr\.
I135---op---I87
I136:
expr->expr ^ expr\.
expr\.
I136---op---I87
I137:
expr->expr & expr\.
expr\.
I137---op---I87
I138:
expr->expr == expr\.
expr\.
I138---op---I87
I139:
expr->expr != expr\.
expr\.
I139---op---I87
I140:
expr->expr > expr\.
expr\.
I140---op---I87
I141:
expr->expr >= expr\.
expr\.
I141---op---I87
I142:
expr->expr < expr\.
expr\.
I142---op---I87
I143:
expr->expr <= expr\.
expr\.
I143---op---I87
I144:
expr->expr + expr\.
expr\.
I144---op---I87
I145:
expr->expr - expr\.
expr\.
I145---op---I87
I146:
expr->expr * expr\.
expr\.
I146---op---I87
I147:
expr->expr / expr\.
expr\.
I147---op---I87
I148:
expr->expr \% expr\.
expr\.
I148---op---I87
I149:
expr->expr . expr\.
expr\.
I149---op---I87
I150:
expr->expr [ expr\.]
expr\.
I150---op---I87
    ---]-------->I123








// vim:ft=temp cole=2 cocu+=nic ts=8 cuc cul
